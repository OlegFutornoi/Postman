{
	"info": {
		"_postman_id": "a8306326-5ef8-4270-9572-25aaf48285ba",
		"name": "Automation Pastman",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36548357"
	},
	"item": [
		{
			"name": "User list (no Auth)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dummyapi.io/data/v1/user",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "User list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dummyapi.io/data/v1/user",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pagination",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 700ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(700);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dummyapi.io/data/v1/user?page=1&limit=50",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"user"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "limit",
							"value": "50"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"email\",jsonData.email);",
							"pm.environment.set(\"userId\",jsonData.id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"id\");",
							"});",
							"",
							"// Отримуємо відповідь від сервера",
							"let responseJson = pm.response.json();",
							"",
							"// Перевіряємо, що поле firstName не містить цифр",
							"pm.test(\"FirstName не містить цифр\", function () {",
							"    let firstName = responseJson.firstName;",
							"    pm.expect(firstName).to.not.match(/\\d/, \"FirstName містить цифри\");",
							"});",
							"",
							"pm.test(\"Check that firstName does not contain special characters\", function () {",
							"    var firstName = responseJson.firstName;",
							"    ",
							"    // Регулярное выражение для проверки наличия спецсимволов",
							"    var specialCharRegex = /[!@#$%^&*(),.?\":{}|<>]/;",
							"",
							"    // Убедитесь, что firstName НЕ содержит спецсимволы",
							"    pm.expect(firstName).to.not.match(specialCharRegex);",
							"});",
							"",
							"pm.test(\"Check that email is in the correct format\", function () {",
							"    var email = responseJson.email;",
							"    ",
							"    // Регулярное выражение для проверки формата email",
							"    var emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;",
							"",
							"    // Убедитесь, что email соответствует нужному формату",
							"    pm.expect(email).to.match(emailRegex);",
							"});",
							"",
							"pm.test(\"Check that phone is in the correct format (***-***-****) and contains only digits\", function () {",
							"    var phone = responseJson.phone;",
							"    ",
							"    // Регулярное выражение для проверки формата phone",
							"    var phoneRegex = /^\\d{3}-\\d{3}-\\d{4}$/;",
							"",
							"    // Убедитесь, что phone соответствует нужному формату",
							"    pm.expect(phone).to.match(phoneRegex);",
							"});",
							"",
							"pm.test(\"response matches the json schema\",function(){",
							"    const schema = {",
							"        \"type\": \"object\",",
							"        \"properties\":{",
							"            \"id\": {\"type\": \"string\", \"description\": \"autogenerated\"},",
							"            \"title\": {\"type\": \"string\", \"enum\": [\"mr\", \"ms\", \"mrs\", \"miss\", \"dr\", \"\"]},",
							"            \"firstName\": {\"type\": \"string\", \"minLength\": 2, \"maxLength\": 50},",
							"            \"lastName\": {\"type\": \"string\", \"minLength\": 2, \"maxLength\": 50},",
							"            \"gender\": {\"type\": \"string\", \"enum\": [\"male\", \"female\", \"other\", \"\"]},",
							"            \"email\": {\"type\": \"string\", \"format\": \"email\"},",
							"            \"dateOfBirth\": {\"type\": \"string\", \"format\": \"date-time\", \"minimum\": \"1900-01-01T00:00:00Z\", \"maximum\": \"now\"},",
							"            \"registerDate\": {\"type\": \"string\", \"description\": \"autogenerated\"},",
							"            \"phone\": {\"type\": \"string\"},",
							"            \"picture\": {\"type\": \"string\", \"format\": \"uri\"},",
							"            \"location\": {\"type\": \"object\"},",
							"        },",
							"    \"required\": [\"firstName\",\"lastName\",\"email\"]",
							"    };",
							"    pm.expect(tv4.validate(responseJson, schema)).to.be.true",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "email",
							"value": "{{$randomEmail}}",
							"type": "text"
						},
						{
							"key": "lastName",
							"value": "{{$randomLastName}}",
							"type": "text"
						},
						{
							"key": "firstName",
							"value": "{{$randomFirstName}}",
							"type": "text"
						},
						{
							"key": "phone",
							"value": "{{$randomPhoneNumber}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://dummyapi.io/data/v1/user/create",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"firstName\": \"OlegTest\",\n\"lastName\": \"QA_Test\",\n\"phone\": \"+380665778967\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dummyapi.io/data/v1/user/{{userId}}",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"user",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check user after update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dummyapi.io/data/v1/user/{{userId}}",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"user",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"postId\",jsonData.id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Cache-Control is present\", function () {",
							"    pm.response.to.have.header(\"Cache-Control\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"text\": \"Hello Hello\",\n\"image\": \"https://randomuser.me/api/portraits/women/58.jpg\",\n\"likes\": 1000,\n\"tags\": \"QA\",\n\"owner\": \"{{userId}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dummyapi.io/data/v1/post/create",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"post",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check post id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dummyapi.io/data/v1/post/{{postId}}",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"post",
						"{{postId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check post list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dummyapi.io/data/v1/post",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check post user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dummyapi.io/data/v1/user/{{userId}}/post",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"user",
						"{{userId}}",
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"commentId\",jsonData.id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"message\": \"Comment\",\n\"owner\": \"{{userId}}\",\n\"post\": \"{{postId}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dummyapi.io/data/v1/comment/create",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"comment",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dummyapi.io/data/v1/user/{{userId}}/comment",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"user",
						"{{userId}}",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dummyapi.io/data/v1/comment/{{commentId}}",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"comment",
						"{{commentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check comment after delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dummyapi.io/data/v1/user/{{userId}}/comment",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"user",
						"{{userId}}",
						"comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"message\": \"Comment\",\n\"owner\": \"66cdc3d8583ec46b624d58bd\",\n\"post\": \"66cdc6b9583ec4ac794d5b5c\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dummyapi.io/data/v1/user/{{userId}}",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"user",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check user after remuving",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dummyapi.io/data/v1/user/{{userId}}",
					"protocol": "https",
					"host": [
						"dummyapi",
						"io"
					],
					"path": [
						"data",
						"v1",
						"user",
						"{{userId}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "62e6f10d11c051e2d93a6723",
				"type": "string"
			},
			{
				"key": "key",
				"value": "app-id",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}